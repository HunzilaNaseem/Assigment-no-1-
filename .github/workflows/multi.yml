name: Multi-Branch Deploy 

on:
  push:
    branches: [main, dev] 
  pull_request: {} 

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci 

      - name: Run lint
        run: npm run lint 

      - name: Run tests
        run: npm test 

      - name: Build project
        run: |
          echo "VITE_BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          npm run build

      - name: Upload build artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy_qa:
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Deploy QA Preview
        run: echo "Deploying QA Preview from dev branch"
      - uses: actions/deploy-pages@v4
        with:
          preview: true

  deploy_prod:
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Deploy Production
        run: echo "Deploying Production site from main branch"
      - uses: actions/deploy-pages@v4

  # slack_notification:
  #   runs-on: ubuntu-latest
  #   needs: [deploy_prod]
  #   if: always() 
  #   steps:
  #     - name: Notify Slack (success)
  #       if: ${{ success() }}
  #       env:
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
  #       run: |
  #         payload='{"text":"✅ *Deployment successful*\nRepo: ${{ github.repository }}\nBranch: ${{ github.ref_name }}\nCommit: ${{ github.sha }}\nRun: ${{ github.run_url }}"}'
  #         curl -s -X POST -H "Content-Type: application/json" --data "$payload" "$SLACK_WEBHOOK"

  #     - name: Notify Slack (failure)
  #       if: ${{ failure() }}
  #       env:
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
  #       run: |
  #         payload='{"text":"❌ *Deployment failed*\nRepo: ${{ github.repository }}\nBranch: ${{ github.ref_name }}\nCommit: ${{ github.sha }}\nRun: ${{ github.run_url }}"}'
  #         curl -s -X POST -H "Content-Type: application/json" --data "$payload" "$SLACK_WEBHOOK"
